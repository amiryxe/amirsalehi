{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-my-first-post-index-mdx-23f5ba26507d08cb550d.js","mappings":"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","sources":["webpack://amirsalehi/./node_modules/@mdx-js/react/lib/index.js","webpack://amirsalehi/./blog/my-first-post/index.mdx","webpack://amirsalehi/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://amirsalehi/./src/helpers/toJalali.ts"],"sourcesContent":["/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"بلاخره بعد از سال‌ها پشت گوش انداختن، سایت شخصی خودم رو راه‌اندازی کردم و این اولین نوشته‌ی من در \", React.createElement(_components.a, {\n    href: \"https://amirsalehi.ir/blog/\"\n  }, \"بلاگم\"), \" هست. مدت‌ها بود که قصد داشتم این کار رو بکنم ولی وجود معضلی بنام کمال‌گرایی که همچنان دارم باهاش دست و پنجه نرم می‌کنم و البته مشغله‌های مختلف بهم این اجازه رو نداده بود که سایت خودم رو داشته باشم.\"), \"\\n\", React.createElement(_components.p, null, \"با این حال یکی از اهدافی که برای خودم توی سال ۱۴۰۳ تعریف کردم این بود که حتما و هر طور که شده سایت خودم رو راه بندازم و علاقه سال‌های پیشین خودم یعنی نوشتن رو ادامه بدم. خوشحالم که تونستم توی همون ماه اول سال این هدف رو تیک بزنم و شروع کنم به محتوا گذاشتن داخل سایت. (امیدوارم همینجوری بقیه هدف‌هام تیک بخوره)\"), \"\\n\", React.createElement(_components.h2, null, \"پیاده‌سازی پروژه وب‌سایت\"), \"\\n\", React.createElement(_components.p, null, \"از وقتی قصد کردم توسعه سایت رو شروع کنم به خودم قول دادم سخت نگیریم و به ساده‌ترین و سریع‌ترین شکل ممکن پروژه رو پیاده کنم. تکنولوژی‌ها و گزینه‌های روی میز مثل همیشه سردرگمم میکرد و من تنها از یه چیز مطمئن بودم و این بود که نمی‌خواستم وردپرس باشه. از طرف دیگه نوشتن سرور و پنل مدیریت هم به نظر لازم نمیومد و همین موارد در نتیجه من رو رسوند به ۲ گزینه \", React.createElement(_components.a, {\n    href: \"https://nextjs.org/\"\n  }, \"Next\"), \" و \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/\"\n  }, \"Gatsby\"), \". با توجه به اینکه با فریمورک Next زیاد کار کردم به نظر برام پیاده‌سازی باهاش راحت‌تر بود اما هیجان تست و کار با گتسبی من رو تشویق کرد به انتخاب گتسبی و در نهایت باید بگم که انتخاب خوبی بود و واقعا ازش راضی هستم.\"), \"\\n\", React.createElement(_components.p, null, \"نهایتا همونطور که گفتم سایت رو با گتسبی که یک فریم‌ورک Static Site Generator بر پایه \", React.createElement(_components.a, {\n    href: \"https://react.dev/\"\n  }, \"React\"), \" هست پیاده کردم و برای نوشتن محتوا هم از فایل‌های با قالب \", React.createElement(_components.a, {\n    href: \"https://mdxjs.com/\"\n  }, \"MDX\"), \" استفاده کردم. نوشته‌های بلاگ صرفا به صورت فایل ذخیره میشن و در فرایند بیلد تبدیل میشن به کدنهایی قابل فهم برای مرورگر و همین موضوع باعث میشه از سرور جهت Render بی‌نیاز بشم. این موضوع برای این تیپ وب‌سایت‌ها کفایت میکنه مخصوصا اینکه باعث میشه بتونید پروژه خودتون رو روی بسترهایی مثه Github Pages دیپلوی کنین که هزینه‌ای برای میزبانی نداره و رایگانه. به همین جهت من هم پروژه رو روی Github Pages ران کردم و البته سورس کل پروژه هم به صورت اپن‌سورس داخل \", React.createElement(_components.a, {\n    href: \"https://github.com/amiryxe/amirsalehi\"\n  }, \"گیت‌هاب\"), \" منتشر کردم شاید به کار یه نفر دیگه اومد.\"), \"\\n\", React.createElement(_components.h2, null, \"نوشتن مقاله و انتشار آموزش\"), \"\\n\", React.createElement(_components.p, null, \"یکی از مهمترین هدف‌های من برای راه‌اندازی این سایت نوشتن مقاله‌های آموزشیه. اینم یکی دیگه از اون مواردی بوده که همیشه دوست داشتم انجام بدم ولی تا امروز اون طوری که میخواستم انجام نشده. امیدوارم بتونم از این بستر اون اندک دانشی که طی این سال‌ها بدست آوردم رو باهاتون به اشتراک بگذارم.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/amir/Desktop/Projects/amirsalehi/blog/my-first-post/index.mdx\";\nimport \"core-js/modules/es.promise.finally.js\";\nimport * as React from 'react';\nimport {useState} from 'react';\nimport PocketBase from 'pocketbase';\nimport {Link} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport toJalali from '../../helpers/toJalali';\nconst url = process.env.POCKETBASE_URL;\nconst client = new PocketBase(url);\nclient.beforeSend = function (url, options) {\n  options.headers['x_token'] = process.env.POCKETBASE_KEY;\n  return {\n    url,\n    options\n  };\n};\nconst BlogPost = _ref => {\n  let {data, children, pageContext} = _ref;\n  const {0: loading, 1: setLoading} = useState(false);\n  const {0: alert, 1: setAlert} = useState('');\n  const {0: comments, 1: setComments} = useState([]);\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  const {categories} = data.mdx.frontmatter;\n  React.useEffect(() => {\n    const getData = async () => {\n      const res = await client.collection('comments').getFullList({\n        filter: \"postSlug=\\\"\" + pageContext.frontmatter__slug + \"\\\"&&isApproved=true\"\n      });\n      setComments(res);\n    };\n    getData();\n  }, []);\n  const submitHandler = async e => {\n    e.preventDefault();\n    const {name, email, text} = e.target;\n    const data = {\n      postSlug: pageContext.frontmatter__slug,\n      name: name.value,\n      email: email.value,\n      text: text.value\n    };\n    setLoading(true);\n    await client.collection('comments').create(data).then(() => {\n      setAlert('دیدگاه شما با موفقیت ارسال شد');\n      name.value = '';\n      email.value = '';\n      text.value = '';\n    }).catch(err => {\n      setAlert('خطا در ارسال دیدگاه');\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return React.createElement(Layout, null, React.createElement(\"h1\", {\n    className: \"text-2xl font-extrabold\"\n  }, data.mdx.frontmatter.title), React.createElement(\"em\", null, toJalali(data.mdx.frontmatter.date)), image && React.createElement(\"div\", {\n    className: \"flex justify-center\"\n  }, React.createElement(GatsbyImage, {\n    image: image,\n    alt: data.mdx.frontmatter.hero_image_alt,\n    className: \"my-8 rounded-md\"\n  })), React.createElement(\"div\", {\n    className: \"mb-16 post\"\n  }, children), React.createElement(\"div\", {\n    className: \"flex gap-4\"\n  }, \"\\u062F\\u0633\\u062A\\u0647\\u200C\\u0628\\u0646\\u062F\\u06CC\\u200C\\u0647\\u0627:\", React.createElement(\"div\", {\n    className: \"flex gap-2\"\n  }, categories.map(category => React.createElement(Link, {\n    key: category.slug,\n    className: \"font-bold underline\",\n    to: '/categories/' + category.slug\n  }, category.name)))), React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"space-y-8 mt-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex gap-4\"\n  }, React.createElement(\"div\", {\n    className: \"sm:w-1/2 flex flex-col gap-5\"\n  }, React.createElement(\"div\", null, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"block mb-2 text-sm font-medium \"\n  }, \"\\u0646\\u0627\\u0645 \\u0634\\u0645\\u0627\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    className: \"block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500 dark:shadow-sm-light\"\n  })), React.createElement(\"div\", null, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"block mb-2 text-sm font-medium \"\n  }, \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    className: \"block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500 dark:shadow-sm-light\",\n    placeholder: \"you@email.com\",\n    dir: \"ltr\"\n  }))), React.createElement(\"div\", {\n    className: \"sm:w-full\"\n  }, React.createElement(\"div\", {\n    className: \"sm:col-span-2\"\n  }, React.createElement(\"label\", {\n    htmlFor: \"text\",\n    className: \"block mb-2 text-sm font-medium\"\n  }, \"\\u0645\\u062A\\u0646 \\u062F\\u06CC\\u062F\\u06AF\\u0627\\u0647\"), React.createElement(\"textarea\", {\n    required: true,\n    id: \"text\",\n    rows: 6,\n    className: \"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg shadow-sm border border-gray-300 focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500\",\n    placeholder: \"\\u0645\\u062A\\u0646 \\u062F\\u06CC\\u062F\\u06AF\\u0627\\u0647 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F...\"\n  })))), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"py-3 px-5 text-sm font-medium text-center text-white rounded-lg bg-gray-700 sm:w-fit hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800\"\n  }, loading ? 'در حال ارسال...' : 'ارسال دیدگاه')), alert && React.createElement(\"p\", null, alert), (comments === null || comments === void 0 ? void 0 : comments.length) > 0 && React.createElement(\"div\", {\n    className: \"mt-12\"\n  }, React.createElement(\"hr\", {\n    className: \"my-4\"\n  }), comments.map(comment => React.createElement(\"div\", {\n    key: comment.id,\n    className: \"mb-4 border border-gray-200 rounded-md p-3\"\n  }, React.createElement(\"div\", {\n    className: \"flex justify-between\"\n  }, React.createElement(\"h3\", {\n    className: \"font-bold\"\n  }, comment.name), React.createElement(\"em\", null, toJalali(comment.created))), React.createElement(\"p\", null, comment.text)))));\n};\nconst query = \"1453602578\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","export default function (inputDate: string) {\n  const d = new Date(inputDate)\n\n  return new Intl.DateTimeFormat('fa-IR').format(d)\n}\n"],"names":["emptyComponents","MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","Object","assign","p","a","h2","_provideComponents","React","href","wrapper","MDXLayout","client","PocketBase","process","beforeSend","url","options","headers","BlogPost","_ref","data","children","pageContext","loading","setLoading","useState","alert","setAlert","comments","setComments","image","getImage","mdx","frontmatter","hero_image","categories","async","res","collection","getFullList","filter","frontmatter__slug","getData","Layout","className","title","toJalali","date","GatsbyImage","alt","hero_image_alt","map","category","Link","key","slug","to","name","onSubmit","e","preventDefault","email","text","target","postSlug","value","create","then","catch","err","finally","htmlFor","type","id","placeholder","dir","required","rows","length","comment","created","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","inputDate","d","Date","Intl","DateTimeFormat","format"],"sourceRoot":""}