"use strict";(self.webpackChunkamirsalehi=self.webpackChunkamirsalehi||[]).push([[167],{9258:function(e,n,t){t.r(n),t.d(n,{Head:function(){return g},default:function(){return f}});t(9391);var l=t(8453),a=t(6540);function r(e){const n=Object.assign({p:"p",a:"a",h2:"h2",pre:"pre",code:"code",strong:"strong",ul:"ul",li:"li"},(0,l.R)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"اکمااسکریپت (ECMAScript) استاندارد اصلی جاوااسکریپت است که به عنوان پایه‌ای برای توسعه ویژگی‌های جدید و بهبود قابلیت‌های زبان عمل می‌کند. هر نسخه از این استاندارد با ویژگی‌ها و بهبودهای جدیدی منتشر می‌شود که به برنامه‌نویسان کمک می‌کند تا کدهای خود را به روزتر، امن‌تر و قدرتمندتر بنویسند. در این مقاله، به صورت مختصر به بررسی تحولات اصلی و ویژگی‌های کلیدی در نسخه‌های مختلف اکمااسکریپت خواهیم پرداخت و روند تکامل این استاندارد را مرور خواهیم کرد. این مقاله، ترجمه‌ای مستقیم از مقاله‌ای در ",a.createElement(n.a,{href:"https://webreference.com/javascript/basics/versions"},"Web Reference")," است."),"\n",a.createElement(n.p,null,"به عنوان یک زبان برنامه نویسی، جاوااسکریپت به طور گسترده در ساخت رابط های کاربری تعاملی و پویا استفاده میشه. جاوااسکریپتی که در سال ۱۹۹۵ توسط برندان آیک تحت عنوان موکا خلق شد و بعد از آن LiveScript و در نهایت به جاوااسکریپت تغییر نام داد."),"\n",a.createElement(n.p,null,"استاندارد ECMAScript توسط Ecma International که سازمانی مستقر در سوئیس است، توسعه یافته و نگهداری می‌شود و به طور رسمی به عنوان ECMA-262 شناخته می‌شود. این استاندارد به عنوان اساس و پایه‌ی جاوااسکریپت عمل می‌کند و نسخه‌های آن به طور مستقیم بر توسعه و تکامل این زبان تأثیر می‌گذارند. در این مقاله به بررسی کلی تکامل اکمااسکریپت می‌پردازیم و به برخی از به‌روزرسانی‌های کلیدی در هر نسخه‌ی آن اشاره خواهیم کرد."),"\n",a.createElement(n.h2,null,"ECMAScript 1 (1997)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۱ که به عنوان ES1 هم شناخته می‌شود، اولین نسخه از استاندارد اکمااسکریپت است که در سال ۱۹۹۷ (۱۳۷۶ شمسی) منتشر شد. این نسخه برپایه‌ی زبان جاوااسکریپت و ویژگی‌هایی چون متغیرها، توابع و دستورات کنترل جریان برنامه (همون if و else) بود."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of a variable in ES1\nvar name = 'John Doe'\nconsole.log(name) // Output: \"John Doe\"\n\n// Example of a function in ES1\nfunction add(a, b) {\n  return a + b\n}\nconsole.log(add(1, 2)) // Output: 3\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2 (1998)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲ یا همون ES2 دومین نسخه از استاندارد اکمااسکریپت بود که در سال ۱۹۹۸ منتشر شد. این نسخه یک سری تغییرات جزئی روی زبان داشت و عمدتاً بر روی سازگارتر کردن استاندارد تمرکز داشت."),"\n",a.createElement(n.h2,null,"ECMAScript 3 (1999)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۳ یا همون ES3 هم سومین نسخه از استاندارد اکما بود که در سال ۱۹۹۹ منتشر شد و چندین ویژگی مهم مثل ",a.createElement(n.strong,null,"عبارات منظم (regex)")," و ",a.createElement(n.strong,null,"ساختار try-catch")," را به زبان اضافه کرد و مدیریت stringها را بهبود بخشید."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of regular expressions in ES3\nvar text = 'Hello, World!'\nvar regex = /Hello/\nconsole.log(regex.test(text)) // Output: true\n\n// Example of try-catch statement in ES3\ntry {\n  var x = y + 1\n} catch (error) {\n  console.log(error) // Output: ReferenceError: y is not defined\n}\n")),"\n",a.createElement(n.h2,null,"ECMAScript 4 (هیچ‌وقت منتشر نشد)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۴ نسخه‌ای بود که به عنوان نسخه‌ی چهارم اکمااسکریپت برنامه‌ریزی شده بود ولی هیچ وقت منتشر نشد. این نسخه قرار بود تغییرات قابل توجهی در زبان ایجاد بکنه. تغییراتی شامل کلاس‌ها، interfaceها و namespaceها. با این حال این پروپوزال‌ها با مخالفت‌های قابل توجهی روبرو شد و در نهایت توسعه این نسخه کنار گذاشته شد."),"\n",a.createElement(n.h2,null,"ECMAScript 5 (2009)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۵ یا همان ES5 پنجمین نسخه از استاندارد اکما بود که در سال ۲۰۰۹ منتشر شد. این نسخه چندین ویژگی مهم شامل حالت strict mode، پشتیبانی از JSON را معرفی کرد و کار با آرایه‌ها را هم بهبود بخشید."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},'// Example of strict mode in ES5\nfunction add(a, b) {\n  \'use strict\'\n  return a + b\n}\nconsole.log(add(1, 2)) // Output: 3\n\n// Example of JSON support in ES5\nvar jsonText = \'{"name":"John Doe","age":30}\'\nvar jsonData = JSON.parse(jsonText)\nconsole.log(jsonData.name) // Output: "John Doe"\n\n// Example of improved array manipulation in ES5\nvar numbers = [1, 2, 3, 4, 5]\nconsole.log(numbers.indexOf(3)) // Output: 2\nconsole.log(\n  numbers.map(function (number) {\n    return number * 2\n  })\n) // Output: [2, 4, 6, 8, 10]\n')),"\n",a.createElement(n.h2,null,"ECMAScript 5.1 (2011)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۵.۱ که به عنوان ES5.1 هم شناخته می‌شود در واقع یک بروزرسانی‌ برای ES5 بود که در سال ۲۰۱۱ منتشر شد. این نسخه بیشتر بر روی سازگاری بیشتر استاندارد و تصحیح خطاها تمرکز کرده بود."),"\n",a.createElement(n.h2,null,"ECMAScript 6 (2015)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۶ یا همان ES6 ششمین نسخه از استاندارد اکمااسکریپت بود که در سال ۲۰۱۵ منتشر شد. این نسخه چندین ویژگی بسیار مهم مانند let و const و arrow functionها، template literalها و کلاس‌ها را معرفی کرد. ویژگی‌های دیگری مانند Map و Set، حالت Destructuring و... مواردی بودن که باعث شدن جاوااسکریپت به یک زبان بسیار جدی در دنیای تکنولوژی تبدیل بشه."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of let and const in ES6\nlet name = 'John Doe'\nconst age = 30\n\n// Example of arrow function in ES6\nlet add = (a, b) => a + b\nconsole.log(add(1, 2)) // Output: 3\n\n// Example of template literals in ES6\nlet message = `Hello, ${name}!`\nconsole.log(message) // Output: \"Hello, John Doe!\"\n\n// Example of class in ES6\nclass Person {\n  constructor(name, age) {\n    this.name = name\n    this.age = age\n  }\n\n  greet() {\n    return `Hello, ${this.name}!`\n  }\n}\nlet john = new Person('John Doe', 30)\nconsole.log(john.greet()) // Output: \"Hello, John Doe!\"\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2016 (ES7)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۱۶ که به عنوان ES7 هم شناخته میشه، هفتمین نسخه از اکما بود که در سال ۲۰۱۶ منتشر شد. این نسخه دو ویژگی اصلی را معرفی کرد: عملگر توان و ‍‍",a.createElement(n.code,null,"Array.prototype.includes()")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of exponentiation operator in ES7\nlet square = 2 ** 2\nconsole.log(square) // Output: 4\n\n// Example of Array.prototype.includes in ES7\nlet numbers = [1, 2, 3, 4, 5]\nconsole.log(numbers.includes(3)) // Output: true\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2017 (ES8)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۱۷ یا همان ES8، هشتمین نسخه‌ی این استاندارد بود که در سال ۲۰۱۷ منتشر شد و چنین ویژگی مهم شامل ",a.createElement(n.code,null,"async/await"),"، ",a.createElement(n.code,null,"Object.values()"),"، ",a.createElement(n.code,null,"Object.entries")," و string padding را معرفی کرد. کد زیر مثالی از ویژگی‌های این نسخه است:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},'// Example of async/await in ES8\nasync function fetchData() {\n  let response = await fetch(\'https://api.example.com/data\')\n  let data = await response.json()\n  return data\n}\n\n// Example of Object.values() and Object.entries() in ES8\nlet person = { name: \'John Doe\', age: 30 }\nconsole.log(Object.values(person)) // Output: ["John Doe", 30]\nconsole.log(Object.entries(person)) // Output: [["name", "John Doe"], ["age", 30]]\n\n// Example of string padding in ES8\nlet text = \'Hello\'\nconsole.log(text.padStart(10, \'-\')) // Output: "-----Hello"\nconsole.log(text.padEnd(10, \'-\')) // Output: "Hello-----"\n')),"\n",a.createElement(n.h2,null,"ECMAScript 2018 (ES9)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۱۸ یا همان ES9 نسخه‌ی بروزرسانی قابل توجهی روی زبان بوجود آورد. ویژگی‌هایی مانند تکرار بصورت غیرهمزمان (asynchronous)، عملگرهای کاربردی rest و spread و همچنین تابع Promise.prototype.finally() از مواردی بود که در این نسخه به جاوااسکریپت اضافه شد."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of asynchronous iteration in ES9\nasync function asyncIterable() {\n  let iterable = {\n    [Symbol.asyncIterator]() {\n      let i = 0\n      return {\n        next() {\n          if (i < 3) {\n            return Promise.resolve({ value: i++, done: false })\n          }\n          return Promise.resolve({ done: true })\n        },\n      }\n    },\n  }\n\n  for await (let value of iterable) {\n    console.log(value) // Output: 0, 1, 2\n  }\n}\n\n// Example of Promise.prototype.finally() in ES9\nfetch('https://api.example.com/data')\n  .then((data) => console.log(data))\n  .catch((error) => console.log(error))\n  .finally(() => console.log('Finished!'))\n\n// Example of rest/spread operators in ES9\nlet person = { name: 'John Doe', age: 30, country: 'USA' }\nlet { name, ...rest } = person\nconsole.log(name) // Output: \"John Doe\"\nconsole.log(rest) // Output: { age: 30, country: \"USA\" }\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2019 (ES10)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۱۹ یا همان ES10، ویژگی‌هایی مانند متدهای Array.prototype.flat(), Array.prototype.flatMap() و همچنین Object.fromEntries() را معرفی کرد."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of Array.prototype.flat() and Array.prototype.flatMap() in ES10\nlet array = [1, 2, [3, 4]]\nconsole.log(array.flat()) // Output: [1, 2, 3, 4]\n\nlet numbers = [1, 2, 3, 4]\nconsole.log(numbers.flatMap((x) => [x, x * 2])) // Output: [1, 2, 2, 4, 3, 6, 4, 8]\n\n// Example of Object.fromEntries() in ES10\nlet entries = [\n  ['name', 'John Doe'],\n  ['age', 30],\n]\nconsole.log(Object.fromEntries(entries)) // Output: { name: \"John Doe\", age: 30 }\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2020 (ES11)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۲۰ یا ES11 با ویژگی‌هایی مانند ",a.createElement(n.strong,null,"BigInt")," برای نوع اعداد integer طولانی، متد ",a.createElement(n.code,null,"Promise.allSettled()"),"، عملگر Nullish Coalescing یا همان ",a.createElement(n.strong,null,"(??)")," و البته عملگر بررسی زنجیره‌کردن اختیاری یا همان ",a.createElement(n.strong,null,"(?.)")," منتشر شد."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of globalThis in ES11\nconsole.log(globalThis) // Output: Window {...}\n\n// Example of private fields in ES11\nclass Person {\n  #name = 'John Doe'\n  #age = 30\n\n  getName() {\n    return this.#name\n  }\n\n  getAge() {\n    return this.#age\n  }\n}\n\nlet person = new Person()\nconsole.log(person.getName()) // Output: \"John Doe\"\nconsole.log(person.getAge()) // Output: 30\n\n// Example of nullish coalescing in ES11\nlet value = null\nconsole.log(value ?? 'default') // Output: \"default\"\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2021 (ES12)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۲۱ که به عنوان ES12 هم شناخته می‌شود، مانند نسخه‌های قبلی چندین ویژگی جدید را در زبان جاوااسکریپت معرفی کرد. ویژگی‌های مانند عملگرهای انتساب منطقی اضافه‌کننده، جداکننده‌های عددی و متدهای Promise.any() و String.prototype.replaceAll()."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"// Example of Logical Assignment Operators in ES12\nlet a = 0,\n  b = 1\na &&= b\nconsole.log(a) // Output: 0\na ||= b\nconsole.log(a) // Output: 1\na &&= b\nconsole.log(a) // Output: 1\n\n// Example of Numeric Separators in ES12\nlet billion = 1_000_000_000 // This is equivalent to let billion = 1000000000;\nconsole.log(billion) // Output: 1000000000\n\n// Example of Promise.any() in ES12\nlet promises = [Promise.reject('1'), Promise.resolve('2'), Promise.reject('3')]\nPromise.any(promises)\n  .then((value) => console.log(value)) // Output: \"2\"\n  .catch((error) => console.log(error))\n\n// Example of String.prototype.replaceAll() in ES12\nlet string = 'foo foo foo'\nconsole.log(string.replaceAll('foo', 'bar')) // Output: \"bar bar bar\"\n")),"\n",a.createElement(n.h2,null,"ECMAScript 2022 (ES13)"),"\n",a.createElement(n.p,null,"اکمااسکریپت ۲۰۲۲ یا ES13، سیزدهمین نگارش از استاندارد اکمااسکریپت است که ویژگی‌های مهمی را معرفی کرد:"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"امکان استفاده از await در سطح بالا، به گونه‌ای که استفاده از این کلمه کلیدی را خارج از یک تابع async ممکن ساخت"),"\n",a.createElement(n.li,null,"عناصر جدید در کلاس: فیلدهای private و public برای instance، فیلدهای static از نوع private و public، نمونه و\nمتدها و دسترسی‌دهنده‌های نمونه خصوصی، و متدها و دسترسی‌دهنده‌های استاتیک خصوصی"),"\n",a.createElement(n.li,null,"امکان استفاده از بلوک‌های استاتیک داخل کلاس‌ها، که اجازه می‌دهد تا ارزیابی و مقداردهی اولیه بر اساس هر کلاس انجام شود"),"\n",a.createElement(n.li,null,"سینتکس #x in obj که به شما اجازه می‌دهد وجود فیلدهای خصوصی در اشیا را تست کنید"),"\n",a.createElement(n.li,null,"شاخص‌های تطابق عبارت منظم از طریق فلگ /d، که شاخص‌های شروع و پایان برای زیررشته‌های تطابق‌یافته را فراهم می‌کند"),"\n",a.createElement(n.li,null,"ویژگی cause در اشیای Error، که می‌تواند برای ثبت زنجیره علل در خطاها استفاده شود"),"\n",a.createElement(n.li,null,"متد at برای Strings، Arrays، و TypedArrays، که امکان ایندکس‌دهی نسبی را فراهم می‌کند"),"\n",a.createElement(n.li,null,"Object.hasOwn، یک جایگزین راحت برای Object.prototype.hasOwnPropert"),"\n"),"\n",a.createElement(n.h2,null,"ECMAScript 2023 (ES14)"),"\n",a.createElement(n.p,null,"چهاردهمین نسخه از استاندارد اکمااسکریپت، اکمااسکریپت ۲۰۲۳ هست که چندین متد جدید بر روی Array.prototype و TypedArray.prototype اضافه کرد که شامل موارد مانند toSorted, toReversed, with, findLast, و findLastIndex می‌باشد."),"\n",a.createElement(n.p,null,'این نسخه پشتیبانی از کامنت‌های "#!" در ابتدای فایل‌ها را آغاز کرد و مسیر را برای فایل‌های ECMAScript قابل اجرا به طور مستقیم هموار کرد. بعلاوه، این ویژگی امکان استفاده از بیشتر Symbolها به عنوان کلید را در مجموعه‌های ضعیف مجاز ساخت. این ویژگی‌های جدید به طور بالقوه به توسعه‌دهندگان بهبودهایی در چندین زمینه مانند مدیریت آرایه‌ها، استفاده از نمادها در نقشه‌های ضعیف، قابلیت اجرای اسکریپت‌ها، و برنامه‌نویسی تابعی با تأکید بیشتر بر تغییرناپذیری (immutability) ارائه می‌دهد.'),"\n",a.createElement(n.p,null,"مروری سریع از این ویژگی‌ها:"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"جستجوی معکوس در آرایه‌ها:")," متدهای ",a.createElement(n.code,null,"findLast()")," و ",a.createElement(n.code,null,"findLastIndex()")," به prototypes آرایه و TypedArray اضافه شدند. این متدها که مشابه ",a.createElement(n.code,null,"find()")," و ",a.createElement(n.code,null,"findIndex()")," هستند، به صورت معکوس عمل می‌کنند و رویکردی ساده برای جستجوی یک آرایه از انتها بدون نیاز به کپی موقت آرایه یا محاسبات پیچیده ایندکس‌ها ارائه می‌دهند."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"استفاده انعطاف‌پذیر از کلید در WeakMapها:")," این به‌روزرسانی اجازه می‌دهد تا نمادهای غیرثبت‌شده به عنوان کلید در WeakMap استفاده شوند و گزینه‌های بیشتری برای توسعه‌دهندگان فراهم می‌آورد تا از symbolها به عنوان شناسایی‌کننده‌های منحصر به فرد برای ذخیره‌سازی و بازیابی داده‌ها استفاده کنند."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"پشتیبانی از اسکریپت‌های قابل اجرا:")," استانداردسازی hashbangs (یا shebangs) در اسکریپت‌های قابل اجرا اکنون به فایل‌های ECMAScript این امکان را می‌دهد که مستقیماً از خط فرمان اجرا شوند، که ممکن است قابلیت حمل اسکریپت‌ها را در سیستم‌عامل‌های مختلف بهبود بخشد."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"عملیات آرایه‌های تغییرناپذیر:")," معادل‌های جدید متدهای ",a.createElement(n.code,null,"reverse()"),"، ",a.createElement(n.code,null,"sort()"),"، و ",a.createElement(n.code,null,"splice()")," در ",a.createElement(n.code,null,"Array.prototype")," که یک کپی جدید از آرایه را باز می‌گردانند به جای تغییر آرایه اصلی. با متد ",a.createElement(n.code,null,"with()"),", این ویژگی از سبک برنامه‌نویسی تابعی که معمولاً بر تغییرناپذیری داده‌ها تأکید دارد، پشتیبانی می‌کند. در زیر، می‌توانید نمونه‌های تصویری از برخی از این متدها را مشاهده کنید:"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"متد ",a.createElement(n.code,null,"toSorted()")," مشابه ",a.createElement(n.code,null,"sort()")," است، اما یک آرایه جدید مرتب شده را باز می‌گرداند و آرایه اصلی را بدون تغییر باقی می‌گذارد."),"\n"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"let arr = [3, 1, 2]\nlet sortedArr = arr.toSorted()\nconsole.log(sortedArr) // Output: [1, 2, 3]\nconsole.log(arr) // Output: [3, 1, 2]\n")),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"متد with() این اجازه را می‌دهد که یک  عنصر تنها را بر اساس ایندکس آن مدیریت کرد و یک آرایه جدید برگرداند"),"\n"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"let arr2 = ['apple', 'banana', 'cherry']\nlet newArr2 = arr2.with(1, 'blueberry')\nconsole.log(newArr2) // Output: ['apple', 'blueberry', 'cherry']\nconsole.log(arr2) // Output: ['apple', 'banana', 'cherry']\n")),"\n",a.createElement(n.h2,null,"درک اصول اکمااسکریپت"),"\n",a.createElement(n.p,null,"توسعه‌ی اکمااسکریپت تحت نظارت کمیته Ecma TC39، تحت یک پروسه ساختاریافته پیروی می‌کند تا پیشنهادات جدید از ایده‌های اولیه به ویژگی‌های کاملاً مشخص‌شده، تست شده و پیاده‌سازی‌شده تکامل یابند. پیشنهادات از مرحله ابتدایی (Strawperson) عبور می‌کنند و به stageهای پیش‌نویس، نامزدی و نهایی شدن می‌رسند. حامیان، پیشنهادات را در این استیج‌ها هدایت می‌کنند و پیشرفت این استیج‌ها نیازمند توافق کمیته است."),"\n",a.createElement(n.p,null,"این فرآیند شفاف است و فرصت‌هایی برای دریافت نظرات از هر دو طرف کمیته و جامعه گسترده‌تر فراهم می‌آورد و در نهایت به ادغام پیشنهادات نهایی‌شده در نسخه‌های جدید استاندارد ECMAScript منجر می‌شود."),"\n",a.createElement(n.p,null," "),"\n",a.createElement(n.h2,null,"نتیجه‌گیری"),"\n",a.createElement(n.p,null,"همونطور که دیدیم، توسعه مشخصات جدید شامل فرآیند دقیق تست و اعتبارسنجی است تا دقت، امکان‌پذیری و سازگاری آنها با برنامه‌های وب موجود اطمینان حاصل شود. هر پیشرفت، مانند آنچه در ECMAScript 2023 (ES14) دیده می‌شود، نقشی در شکل‌گیری چشم‌انداز JavaScript ایفا می‌کند و آن را در برابر تقاضاهای دیجیتال متغیر، قوی‌تر و پویا‌تر می‌سازد."))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.R)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)},c=t(7666),s=t(4794),m=t(2532),u=t(5172),i=t(1042),p=t(1562);const E=new c.Ay("https://amir.pockethost.io/");E.beforeSend=function(e,n){return n.headers.x_token="352fa0d7-94fa-476c-b2b1-464b84ed20e3",{url:e,options:n}};const d=e=>{let{data:n,children:t,pageContext:l}=e;const{0:r,1:o}=(0,a.useState)(!1),{0:c,1:i}=(0,a.useState)(""),{0:d,1:g}=(0,a.useState)([]),f=(0,m.c)(n.mdx.frontmatter.hero_image),{categories:y}=n.mdx.frontmatter;a.useEffect((()=>{(async()=>{const e=await E.collection("comments").getFullList({filter:'postSlug="'+l.frontmatter__slug+'"&&isApproved=true'});g(e)})()}),[]);return a.createElement(u.A,null,a.createElement("h1",{className:"text-2xl font-extrabold"},n.mdx.frontmatter.title),a.createElement("em",null,(0,p.A)(n.mdx.frontmatter.date)),f&&a.createElement("div",{className:"flex justify-center"},a.createElement(m.G,{image:f,alt:n.mdx.frontmatter.hero_image_alt,className:"my-8 rounded-md"})),a.createElement("div",{className:"mb-16 post"},t),a.createElement("div",{className:"flex gap-4"},"دسته‌بندی‌ها:",a.createElement("div",{className:"flex gap-2"},y.map((e=>a.createElement(s.Link,{key:e.slug,className:"font-bold underline",to:"/categories/"+e.slug},e.name))))),a.createElement("form",{onSubmit:async e=>{e.preventDefault();const{name:n,email:t,text:a}=e.target,r={postSlug:l.frontmatter__slug,name:n.value,email:t.value,text:a.value};o(!0),await E.collection("comments").create(r).then((()=>{i("دیدگاه شما با موفقیت ارسال شد"),n.value="",t.value="",a.value=""})).catch((e=>{i("خطا در ارسال دیدگاه")})).finally((()=>{o(!1)}))},className:"space-y-8 mt-12"},a.createElement("div",{className:"flex gap-4 max-sm:flex-col"},a.createElement("div",{className:"sm:w-1/2 flex flex-col gap-5"},a.createElement("div",null,a.createElement("label",{htmlFor:"name",className:"block mb-2 text-sm font-medium "},"نام شما"),a.createElement("input",{type:"text",id:"name",className:"block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500 dark:shadow-sm-light"})),a.createElement("div",null,a.createElement("label",{htmlFor:"email",className:"block mb-2 text-sm font-medium "},"ایمیل"),a.createElement("input",{type:"text",id:"email",className:"block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500 dark:shadow-sm-light",placeholder:"you@email.com",dir:"ltr"}))),a.createElement("div",{className:"sm:w-full"},a.createElement("div",{className:"sm:col-span-2"},a.createElement("label",{htmlFor:"text",className:"block mb-2 text-sm font-medium"},"متن دیدگاه"),a.createElement("textarea",{required:!0,id:"text",rows:6,className:"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg shadow-sm border border-gray-300 focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500",placeholder:"متن دیدگاه خود را وارد کنید..."})))),a.createElement("button",{type:"submit",className:"py-3 px-5 text-sm font-medium text-center text-white rounded-lg bg-gray-700 sm:w-fit hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"},r?"در حال ارسال...":"ارسال دیدگاه")),c&&a.createElement("p",null,c),(null==d?void 0:d.length)>0&&a.createElement("div",{className:"mt-12"},a.createElement("hr",{className:"my-4"}),d.map((e=>a.createElement("div",{key:e.id,className:"mb-4 border border-gray-200 rounded-md p-3"},a.createElement("div",{className:"flex justify-between"},a.createElement("h3",{className:"font-bold"},e.name),a.createElement("em",null,(0,p.A)(e.created))),a.createElement("p",null,e.text))))))},g=e=>{let{data:n}=e;return a.createElement(i.A,{title:n.mdx.frontmatter.title})};function f(e){return a.createElement(d,e,a.createElement(o,e))}},1562:function(e,n,t){function l(e){const n=new Date(e);return new Intl.DateTimeFormat("fa-IR").format(n)}t.d(n,{A:function(){return l}})},8453:function(e,n,t){t.d(n,{R:function(){return o}});var l=t(6540);const a={},r=l.createContext(a);function o(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);
//# sourceMappingURL=component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-brief-history-of-ecmascript-index-mdx-0331c837eaad2c5ba28c.js.map